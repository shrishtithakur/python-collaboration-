class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append({"task": task, "completed": False})

    def view_all_tasks(self, sort_by=None):
        if not self.tasks:
            print("No tasks.")
        else:
            if sort_by == "name":
                sorted_tasks = sorted(self.tasks, key=lambda x: x["task"])
            elif sort_by == "completed":
                sorted_tasks = sorted(self.tasks, key=lambda x: x["completed"])
            else:
                sorted_tasks = self.tasks
                
            for i, task in enumerate(sorted_tasks, start=1):
                print(f"{i}. {'[X]' if task['completed'] else '[ ]'} {task['task']}")

    def mark_completed(self, task_index):
        if 1 <= task_index <= len(self.tasks):
            self.tasks[task_index - 1]["completed"] = True
            print("Task marked as completed.")
        else:
            print("Invalid task index.")

    def delete_task(self, task_index):
        if 1 <= task_index <= len(self.tasks):
            del self.tasks[task_index - 1]
            print("Task deleted.")
        else:
            print("Invalid task index.")


def main():
    todo_list = ToDoList()
    while True:
        print("\n1. Add New Task")
        print("2. View All Tasks")
        print("3. View All Tasks Sorted by Name")
        print("4. View All Tasks Sorted by Completion")
        print("5. Mark Task as Completed")
        print("6. Delete Task")
        print("7. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            task = input("Enter the task: ")
            todo_list.add_task(task)
        elif choice == '2':
            print("All Tasks:")
            todo_list.view_all_tasks()
        elif choice == '3':
            print("All Tasks Sorted by Name:")
            todo_list.view_all_tasks(sort_by="name")
        elif choice == '4':
            print("All Tasks Sorted by Completion:")
            todo_list.view_all_tasks(sort_by="completed")
        elif choice == '5':
            task_index = int(input("Enter the task index to mark as completed: "))
            todo_list.mark_completed(task_index)
        elif choice == '6':
            task_index = int(input("Enter the task index to delete: "))
            todo_list.delete_task(task_index)
        elif choice == '7':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()
